from flask import Flask, request
import mysql.connector
import os
import logging
import hashlib
import telebot
from dotenv import load_dotenv
from datetime import datetime
import pytz

load_dotenv()

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db_config = {
    'host': os.getenv("MYSQL_HOST", "mysql"),
    'user': os.getenv("MYSQL_USER", "root"),
    'password': os.getenv("MYSQL_PASSWORD", "RjhzdsqCkjy"),
    'database': os.getenv("MYSQL_DATABASE", "ioio"),
    'port': 3306
}

# –°–µ–∫—Ä–µ—Ç –∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
YOOMONEY_SECRET = os.getenv("YOOMONEY_SECRET")
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)
LOCAL_TZ = pytz.timezone(os.getenv("TZ", "Europe/Moscow"))


@app.route('/yoomoney-webhook', methods=['POST'])
def yoomoney_webhook():
    data = request.form
    logging.info(f"[Webhook INCOMING] {data}")

    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notification_type = data.get('notification_type', '')
        operation_id = data.get('operation_id', '')
        amount = data.get('amount', '')  # —Å—É–º–º–∞, –ø–æ—Å—Ç—É–ø–∏–≤—à–∞—è –Ω–∞ —Å—á—ë—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ (—É–∂–µ –ø–æ—Å–ª–µ –∫–æ–º–∏—Å—Å–∏–∏)
        withdraw_amount = data.get('withdraw_amount', '')  # —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        currency = data.get('currency', '')
        datetime_ = data.get('datetime', '')
        sender = data.get('sender', '')
        codepro = data.get('codepro', '')
        label = data.get('label', '')
        sha1_hash = data.get('sha1_hash', '')


        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–¥ –≤–∞–ª—é—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É
        currency = {
            '643': 'RUB',
            '840': 'USD',
            '978': 'EUR'
        }.get(currency, currency)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
        hash_string = f"{notification_type}&{operation_id}&{amount}&{currency}&{datetime_}&{sender}&{codepro}&{YOOMONEY_SECRET}&{label}"
        calculated_hash = hashlib.sha1(hash_string.encode("utf-8")).hexdigest()

        if sha1_hash != calculated_hash:
            logging.warning("[Webhook] ‚ùå Hash mismatch ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ —Ñ–∞–ª—å—à–∏–≤–∫–∞!")
            return "UNAUTHORIZED", 403

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        if label and withdraw_amount:
            db = mysql.connector.connect(**db_config)
            cursor = db.cursor()

            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—É–º–º–µ (–±–µ–∑ –≤—ã—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–∏)
            sql = "UPDATE users SET balance = balance + %s WHERE tg_user_id = %s"
            val = (int(float(withdraw_amount)), label)
            cursor.execute(sql, val)
            db.commit()

            # üëá –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É payments
            try:
                datetime_obj = datetime.strptime(datetime_, '%Y-%m-%dT%H:%M:%SZ')
                datetime_obj = utc_time.replace(tzinfo=pytz.utc).astimezone(LOCAL_TZ)
            except ValueError:
                datetime_obj = datetime.now(LOCAL_TZ)  # fallback –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π

            sql = """
                INSERT INTO payments (
                    tg_user_id, amount, withdraw_amount, currency, datetime,
                    operation_id, label, comment, type
                ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, 'replenish')
            """
            val = (
                int(label), float(amount), float(withdraw_amount), currency,
                datetime_obj, operation_id, label, sender
            )
            cursor.execute(sql, val)
            db.commit()

            # –ü–æ–ª—É—á–∞–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("SELECT chat_id FROM users WHERE tg_user_id = %s", (label,))
            row = cursor.fetchone()
            cursor.close()
            db.close()

            if row:
                chat_id = row[0]
                bot.send_message(chat_id, f"üéâ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {withdraw_amount} RUB!")

            # –í –ª–æ–≥ ‚Äî amount (—á—Ç–æ –¥–æ—à–ª–æ –¥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞), –Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–µ —Å—É–º–º—ã
            logging.info(f"[Webhook] ‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è tg_user_id={label} –Ω–∞ {withdraw_amount} RUB (–Ω–∞ —Å—á—ë—Ç –ø–æ—Å—Ç—É–ø–∏–ª–æ {amount} RUB)")

        return "OK"

    except Exception as e:
        logging.error(f"[Webhook ERROR] {e}")
        return "SERVER ERROR", 500

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=8088)
